name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонуємо репозиторій
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Налаштовуємо Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # 3. Встановлюємо залежності
      - name: Install dependencies
        run: npm install

      # 4. Запускаємо тести
      - name: Run tests
        run: npm test

      # 5. Створюємо Docker-образ
      - name: Build Docker image
        run: docker build -t devops-practice-app .

      # 6. Завантаження на Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag devops-practice-app:latest ${{ secrets.DOCKER_USERNAME }}/devops-practice-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/devops-practice-app:latest

      # 7. Розгортання на Heroku
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: 'devops-practice-app'
          heroku_email: 'kivlyukyura@gmail.com'
          docker: true

      # Налаштування AWS облікових даних
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 8. AWS: Логін до Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # 9. Завантаження образу до Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          IMAGE_TAG=latest
          REPO_URI=$(aws ecr describe-repositories --repository-names pr4-3-devops --region ${{ secrets.AWS_REGION }} --query 'repositories[0].repositoryUri' --output text)
          docker tag devops-practice-app:latest $REPO_URI:$IMAGE_TAG
          docker push $REPO_URI:$IMAGE_TAG

      # 10. AWS: Розгортання в ECS
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: pr4-3-service-new-1
          cluster: pr4-3-cluster
          wait-for-service-stability: true
